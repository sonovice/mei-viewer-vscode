name: Release Extension

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  release:
    name: Build and Tag Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Parse version from package.json
        id: parse
        run: |
          set -e
          CURR=$(grep -m1 '"version":' package.json | sed -E 's/.*"version":\s*"([^"]+)".*/\1/')
          echo "version=$CURR" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: tagcheck
        run: |
          set -e
          VER="v${{ steps.parse.outputs.version }}"
          git fetch --tags --quiet
          if git rev-parse -q --verify "refs/tags/$VER" >/dev/null; then
            echo "Tag $VER already exists; skipping release"
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "No tag $VER; proceeding with release"
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node
        if: ${{ steps.tagcheck.outputs.changed == 'true' }}
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Bun
        if: ${{ steps.tagcheck.outputs.changed == 'true' }}
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.22

      - name: Install dependencies
        if: ${{ steps.tagcheck.outputs.changed == 'true' }}
        run: bun install --frozen-lockfile

      - name: Package VSIX
        if: ${{ steps.tagcheck.outputs.changed == 'true' }}
        id: package
        run: |
          set -e
          rm -f *.vsix
          bun run package:vsix
          VSIX_PATH="$(ls *.vsix | head -n1)"
          echo "vsix_path=$VSIX_PATH" >> $GITHUB_OUTPUT

      - name: Upload VSIX artifact
        if: ${{ steps.tagcheck.outputs.changed == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: vsix
          path: ${{ steps.package.outputs.vsix_path }}

      - name: Create GitHub Release with VSIX
        if: ${{ steps.tagcheck.outputs.changed == 'true' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.parse.outputs.version }}
          name: v${{ steps.parse.outputs.version }}
          prerelease: false
          target_commitish: ${{ github.sha }}
          files: |
            ${{ steps.package.outputs.vsix_path }}
